name: anki-woodrow
base: core20
summary: Anki is a friendly, intelligent spaced learning system.
description: |
  Anki is a program which makes remembering things easy. Because it's a lot
  more efficient than traditional study methods, you can either greatly
  decrease your time spent studying, or greatly increase the amount you learn.

grade: devel
confinement: strict
architectures:
  - build-on: amd64
    run-on: [amd64]
adopt-info: anki

layout:
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/alsa-lib:
    bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/alsa-lib
  /etc/asound.conf:
    bind-file: $SNAP/etc/alsa.conf
  /usr/share/alsa/alsa.conf:
    bind-file: $SNAP/usr/share/alsa/alsa.conf

apps:
  anki:
    adapter: full
    command: bin/anki
    command-chain:
      - bin/desktop-launch
    desktop: anki.desktop
    plugs:
      - desktop
      - desktop-legacy
      - wayland
      - x11
      - network
      - home
      - browser-support
      - pulseaudio
      - audio-playback
      - audio-record
      - opengl
      - unity7
    environment:
      DISABLE_WAYLAND: 1
      LC_ALL: C.UTF-8
      LD_LIBRARY_PATH: $LD_LIBRARY_PATH:$SNAP/usr/lib/x86_64-linux-gnu/samba
      QTWEBENGINEPROCESS_PATH: $SNAP/usr/lib/x86_64-linux-gnu/qt5/libexec/QtWebEngineProcess
      PYTHONPATH: $SNAP/lib/python3.8/site-packages

parts:
  # Remote part for support of various desktop technologies
  # Refer: https://github.com/ubuntu/snapcraft-desktop-helpers/blob/master/snapcraft.yaml
  desktop-qt5:
    source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
    source-depth: 1
    source-subdir: qt

    plugin: make
    make-parameters: ["FLAVOR=qt5"]
    build-packages:
    - build-essential
    - qtbase5-dev
    - dpkg-dev
    stage-packages:
    - libxkbcommon0
    - ttf-ubuntu-font-family
    - dmz-cursor-theme
    - light-themes
    - adwaita-icon-theme
    - gnome-themes-standard
    - shared-mime-info
    - libqt5gui5
    - libgdk-pixbuf2.0-0
    - libqt5svg5 # for loading icon themes which are svg
    - try: [appmenu-qt5] # not available on core18
    - locales-all
    - xdg-user-dirs
    - fcitx-frontend-qt5

  alsa:
    plugin: nil
    source: https://github.com/diddledan/snapcraft-alsa.git
    override-pull: |
      cat > alsa.conf <<EOF
      pcm.!default {
        type pulse
        fallback "sysdefault"
        hint {
          show on
          description "Default ALSA Output (currently PulseAudio Sound Server)"
        }
      }
      ctl.!default {
        type pulse
        fallback "sysdefault"
      }
      EOF
    override-build: |
      install -m644 -D -t $SNAPCRAFT_PART_INSTALL/etc alsa.conf
    build-packages:
      - libasound2-dev
    stage-packages:
      - libasound2
      - libasound2-plugins

  rust:
    plugin: nil
    build-environment:
      - CARGO_HOME: $SNAPCRAFT_PART_INSTALL/cargo
      - RUSTUP_HOME: $SNAPCRAFT_PART_INSTALL/rustup
      - PATH: $PATH:$SNAPCRAFT_PART_INSTALL/cargo/bin
    override-build: |
      mkdir $CARGO_HOME $RUSTUP_HOME
      curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --quiet --no-modify-path
      rustup update
      cargo install ripgrep
    prime:
      - -cargo/git
      - -cargo/registry
      - -rustup

  protoc:
    plugin: nil
    build-packages:
      - unzip
    override-build: |
      curl -fsSL --proto '=https' -O https://github.com/protocolbuffers/protobuf/releases/download/v3.11.4/protoc-3.11.4-linux-x86_64.zip
      unzip protoc-3.11.4-linux-x86_64.zip -d $SNAPCRAFT_PART_INSTALL -x readme.txt

  nodejs:
    plugin: nil
    override-build: |
      curl -fsSL --proto '=https' -O https://nodejs.org/dist/v12.18.3/node-v12.18.3-linux-x64.tar.xz
      tar xJvf node-v12.18.3-linux-x64.tar.xz --strip-components 1 -C $SNAPCRAFT_PART_INSTALL

  anki:
    plugin: nil
    build-environment:
      - PART_RUST: $SNAPCRAFT_PROJECT_DIR/parts/rust/install
      - PART_PROTOC: $SNAPCRAFT_PROJECT_DIR/parts/protoc/install
      - PART_NODEJS: $SNAPCRAFT_PROJECT_DIR/parts/nodejs/install
      - CARGO_HOME: $PART_RUST/cargo
      - RUSTUP_HOME: $PART_RUST/rustup
      - PATH: $PATH:$PART_RUST/cargo/bin:$PART_PROTOC/bin:$PART_NODEJS/bin
    source: .
    after: [desktop-qt5, alsa, rust, protoc, nodejs]
    build-packages:
      - python3
      - python3-dev
      - python3-venv
      - python3-pip
      - python3-pyqt5
      - pyqt5-dev-tools
      - portaudio19-dev
      - git
      - gettext
      - rsync
      - curl
    override-pull: |
      snapcraftctl pull
      VERSION=$(grep "version=" qt/setup.py | grep -oP "[^\"]*[^\"]" | sed -n '2p')
      echo "$VERSION"
      snapcraftctl set-version "$VERSION"
    override-build: |
      snapcraftctl build
      make develop
      make build
    stage-packages:
      - python3
      - rsync
      - gettext
      - mpv
      - lame
      - libportaudio2
      - libglu1-mesa
      - libnss3
      - libxtst6
      - libgtk-3-0
      - libxcb-icccm4
      - libxcb-image0
      - libxcb-keysyms1
      - libxcb-randr0
      - libxcb-render-util0
      - libxcb-xinerama0
      - libxcb-xkb1
      - libxkbcommon-x11-0
      - libxcomposite1
      - samba-libs
        #- libc-bin
        #- libcairo-gobject2
        #- libepoxy0
        #- libatspi2.0-0
        #- libatk1.0-0
        #- libatk-bridge2.0-0
        #- libbluray2
        #- libslang2
        #- locales
        #- libnspr4
        #- python3-pyqt5
        #- python3-pyqt5.qtwebengine
    override-prime: |
      snapcraftctl prime

      pip3 install --no-cache-dir PyQtWebEngine==5.12.1 PyQt5==5.12.1 pyaudio $SNAPCRAFT_PROJECT_DIR/parts/anki/build/dist/*.whl -t $SNAPCRAFT_PRIME/lib/python3.8/site-packages

      # workaround
      rm -rf usr/lib/x86_64-linux-gnu/qt5 usr/lib/x86_64-linux-gnu/qt-default
      rm -rf usr/lib/x86_64-linux-gnu/libQt5*
      cp -rf lib/python3.8/site-packages/PyQt5/Qt/lib/* usr/lib/x86_64-linux-gnu
      mkdir -p usr/lib/x86_64-linux-gnu/qt5/libexec
      cp -rf lib/python3.8/site-packages/PyQt5/Qt/libexec/QtWebEngineProcess usr/lib/x86_64-linux-gnu/qt5/libexec
      cp -rf lib/python3.8/site-packages/PyQt5/Qt/resources/* usr/lib/x86_64-linux-gnu/qt5/libexec
      cp -rf lib/python3.8/site-packages/PyQt5/Qt/translations/qtwebengine_locales usr/lib/x86_64-linux-gnu/qt5/libexec/qtwebengine_locales

      printf "#!/usr/bin/env python3\nimport aqt\naqt.run()\n" > bin/anki
      chmod +x bin/anki

      cp $SNAPCRAFT_PROJECT_DIR/qt/anki.desktop .
      cp $SNAPCRAFT_PROJECT_DIR/qt/anki.png .
      sed -i -E 's|Icon=anki|Icon=anki.png|' anki.desktop
